kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: temporary-elasticsearch
  namespace: ndc-dev
  labels:
    application: temporary-elasticsearch
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: { }
    activeDeadlineSeconds: 21600
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    deploymentConfig: temporary-elasticsearch
  template:
    metadata:
      name: temporary-elasticsearch
      creationTimestamp: null
      labels:
        application: temporary-elasticsearch
        deploymentConfig: temporary-elasticsearch
    spec:
      containers:
        - resources:
            limits:
              cpu: 1
              memory: 800Mi
            requests:
              cpu: 500m
              memory: 600Mi
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: temporary-elasticsearch
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
          env:
            - name: discovery.type
              value: single-node
            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"
      restartPolicy: Always
      terminationGracePeriodSeconds: 75
      dnsPolicy: ClusterFirst
      securityContext: { }
      schedulerName: default-scheduler      
